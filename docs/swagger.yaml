swagger: '2.0'
info:
  version: '1.0'
  title: Warung Makan
  contact: {}
host: localhost:8181
basePath: /v1
securityDefinitions: {}
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /private/customer:
    get:
      summary: List Customer
      tags:
      - Costumer
      operationId: ListCustomer
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      security: []
    post:
      summary: New Customer
      tags:
      - Costumer
      operationId: NewCustomer
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/NewCustomerRequest'
      responses:
        '200':
          description: ''
          headers: {}
    put:
      summary: Update Customer
      tags:
      - Costumer
      operationId: UpdateCustomer
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          example: >-
            {

               "id":5",

               "name":"Doni",

               "email": "email@gmail.com",

               "address":"Palembang"

            }
          type: string
      responses:
        '200':
          description: ''
          headers: {}
  /private/customer/{id}:
    get:
      summary: Find Customer By ID
      tags:
      - Costumer
      operationId: FindCustomerByID
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: id
        in: path
        required: true
        type: string
        description: ''
      responses:
        '200':
          description: ''
          headers: {}
    delete:
      summary: Delete Customer
      tags:
      - Costumer
      operationId: DeleteCustomer
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: id
        in: path
        required: true
        type: string
        description: ''
      responses:
        '200':
          description: ''
          headers: {}
  /auth:
    post:
      summary: Auth
      tags:
      - Authenticate
      operationId: Auth
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/AuthRequest'
      responses:
        '200':
          description: ''
          headers: {}
      security: []
definitions:
  NewCustomerRequest:
    title: NewCustomerRequest
    example:
      id: '1'
      name: Vicky
      email: vick@gmail.com
      address: jakarta
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      email:
        type: string
      address:
        type: string
    required:
    - id
    - name
    - email
    - address
  AuthRequest:
    title: AuthRequest
    example:
      username: enigma
      password: '123'
    type: object
    properties:
      username:
        type: string
      password:
        type: string
    required:
    - username
    - password
security: []
tags:
- name: Costumer
- name: Authenticate
